{
  "version": 3,
  "sources": ["../../../src/links/list-created-links.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { bcs } from '@mysten/sui.js/bcs';\nimport type { SuiClient } from '@mysten/sui.js/client';\nimport { SuiGraphQLClient } from '@mysten/sui.js/graphql';\nimport { graphql } from '@mysten/sui.js/graphql/schemas/2024.4';\nimport { fromB64, normalizeSuiAddress } from '@mysten/sui.js/utils';\n\nimport { ZkSendLink } from './claim.js';\nimport type { ZkBagContractOptions } from './zk-bag.js';\nimport { MAINNET_CONTRACT_IDS } from './zk-bag.js';\n\nconst ListCreatedLinksQuery = graphql(`\n\tquery listCreatedLinks($address: SuiAddress!, $function: String!, $cursor: String) {\n\t\ttransactionBlocks(\n\t\t\tlast: 10\n\t\t\tbefore: $cursor\n\t\t\tfilter: { signAddress: $address, function: $function, kind: PROGRAMMABLE_TX }\n\t\t) {\n\t\t\tpageInfo {\n\t\t\t\tstartCursor\n\t\t\t\thasPreviousPage\n\t\t\t}\n\t\t\tnodes {\n\t\t\t\teffects {\n\t\t\t\t\ttimestamp\n\t\t\t\t}\n\t\t\t\tdigest\n\t\t\t\tkind {\n\t\t\t\t\t__typename\n\t\t\t\t\t... on ProgrammableTransactionBlock {\n\t\t\t\t\t\tinputs(first: 10) {\n\t\t\t\t\t\t\tnodes {\n\t\t\t\t\t\t\t\t__typename\n\t\t\t\t\t\t\t\t... on Pure {\n\t\t\t\t\t\t\t\t\tbytes\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttransactions(first: 10) {\n\t\t\t\t\t\t\tnodes {\n\t\t\t\t\t\t\t\t__typename\n\t\t\t\t\t\t\t\t... on MoveCallTransaction {\n\t\t\t\t\t\t\t\t\tmodule\n\t\t\t\t\t\t\t\t\tfunctionName\n\t\t\t\t\t\t\t\t\tpackage\n\t\t\t\t\t\t\t\t\targuments {\n\t\t\t\t\t\t\t\t\t\t__typename\n\t\t\t\t\t\t\t\t\t\t... on Input {\n\t\t\t\t\t\t\t\t\t\t\tix\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`);\n\nexport async function listCreatedLinks({\n\taddress,\n\tcursor,\n\tnetwork,\n\tcontract = MAINNET_CONTRACT_IDS,\n\tfetch: fetchFn,\n\t...linkOptions\n}: {\n\taddress: string;\n\tcontract?: ZkBagContractOptions;\n\tcursor?: string;\n\tnetwork?: 'mainnet' | 'testnet';\n\n\t// Link options:\n\thost?: string;\n\tpath?: string;\n\tclaimApi?: string;\n\tclient?: SuiClient;\n\tfetch?: typeof fetch;\n}) {\n\tconst gqlClient = new SuiGraphQLClient({\n\t\turl:\n\t\t\tnetwork === 'testnet'\n\t\t\t\t? 'https://sui-testnet.mystenlabs.com/graphql'\n\t\t\t\t: 'https://sui-mainnet.mystenlabs.com/graphql',\n\t\tfetch: fetchFn,\n\t});\n\n\tconst packageId = normalizeSuiAddress(contract.packageId);\n\n\tconst page = await gqlClient.query({\n\t\tquery: ListCreatedLinksQuery,\n\t\tvariables: {\n\t\t\taddress,\n\t\t\tcursor,\n\t\t\tfunction: `${packageId}::zk_bag::new`,\n\t\t},\n\t});\n\n\tconst transactionBlocks = page.data?.transactionBlocks;\n\n\tif (!transactionBlocks || page.errors?.length) {\n\t\tthrow new Error('Failed to load created links');\n\t}\n\n\tconst links = (\n\t\tawait Promise.all(\n\t\t\ttransactionBlocks.nodes.map(async (node) => {\n\t\t\t\tif (node.kind?.__typename !== 'ProgrammableTransactionBlock') {\n\t\t\t\t\tthrow new Error('Invalid transaction block');\n\t\t\t\t}\n\n\t\t\t\tconst fn = node.kind.transactions.nodes.find(\n\t\t\t\t\t(fn) =>\n\t\t\t\t\t\tfn.__typename === 'MoveCallTransaction' &&\n\t\t\t\t\t\tfn.package === packageId &&\n\t\t\t\t\t\tfn.module === 'zk_bag' &&\n\t\t\t\t\t\tfn.functionName === 'new',\n\t\t\t\t);\n\n\t\t\t\tif (fn?.__typename !== 'MoveCallTransaction') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst addressArg = fn.arguments[1];\n\n\t\t\t\tif (addressArg.__typename !== 'Input') {\n\t\t\t\t\tthrow new Error('Invalid address argument');\n\t\t\t\t}\n\n\t\t\t\tconst input = node.kind.inputs.nodes[addressArg.ix];\n\n\t\t\t\tif (input.__typename !== 'Pure') {\n\t\t\t\t\tthrow new Error('Expected Address input to be a Pure value');\n\t\t\t\t}\n\n\t\t\t\tconst address = bcs.Address.parse(fromB64(input.bytes as string));\n\n\t\t\t\tconst link = new ZkSendLink({\n\t\t\t\t\tnetwork,\n\t\t\t\t\taddress,\n\t\t\t\t\tcontract,\n\t\t\t\t\tisContractLink: true,\n\t\t\t\t\t...linkOptions,\n\t\t\t\t});\n\n\t\t\t\tawait link.loadAssets();\n\n\t\t\t\treturn {\n\t\t\t\t\tlink,\n\t\t\t\t\tclaimed: !!link.claimed,\n\t\t\t\t\tassets: link.assets!,\n\t\t\t\t\tdigest: node.digest,\n\t\t\t\t\tcreatedAt: node.effects?.timestamp!,\n\t\t\t\t};\n\t\t\t}),\n\t\t)\n\t).reverse();\n\n\treturn {\n\t\tcursor: transactionBlocks.pageInfo.startCursor,\n\t\thasNextPage: transactionBlocks.pageInfo.hasPreviousPage,\n\t\tlinks: links.filter((link): link is NonNullable<typeof link> => link !== null),\n\t};\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,iBAAoB;AAEpB,qBAAiC;AACjC,eAAwB;AACxB,mBAA6C;AAE7C,mBAA2B;AAE3B,oBAAqC;AAErC,MAAM,4BAAwB,kBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAgDrC;AAED,eAAsB,iBAAiB;AAAA,EACtC;AAAA,EACA;AAAA,EACA;AAAA,EACA,WAAW;AAAA,EACX,OAAO;AAAA,EACP,GAAG;AACJ,GAYG;AACF,QAAM,YAAY,IAAI,gCAAiB;AAAA,IACtC,KACC,YAAY,YACT,+CACA;AAAA,IACJ,OAAO;AAAA,EACR,CAAC;AAED,QAAM,gBAAY,kCAAoB,SAAS,SAAS;AAExD,QAAM,OAAO,MAAM,UAAU,MAAM;AAAA,IAClC,OAAO;AAAA,IACP,WAAW;AAAA,MACV;AAAA,MACA;AAAA,MACA,UAAU,GAAG;AAAA,IACd;AAAA,EACD,CAAC;AAED,QAAM,oBAAoB,KAAK,MAAM;AAErC,MAAI,CAAC,qBAAqB,KAAK,QAAQ,QAAQ;AAC9C,UAAM,IAAI,MAAM,8BAA8B;AAAA,EAC/C;AAEA,QAAM,SACL,MAAM,QAAQ;AAAA,IACb,kBAAkB,MAAM,IAAI,OAAO,SAAS;AAC3C,UAAI,KAAK,MAAM,eAAe,gCAAgC;AAC7D,cAAM,IAAI,MAAM,2BAA2B;AAAA,MAC5C;AAEA,YAAM,KAAK,KAAK,KAAK,aAAa,MAAM;AAAA,QACvC,CAACA,QACAA,IAAG,eAAe,yBAClBA,IAAG,YAAY,aACfA,IAAG,WAAW,YACdA,IAAG,iBAAiB;AAAA,MACtB;AAEA,UAAI,IAAI,eAAe,uBAAuB;AAC7C,eAAO;AAAA,MACR;AAEA,YAAM,aAAa,GAAG,UAAU,CAAC;AAEjC,UAAI,WAAW,eAAe,SAAS;AACtC,cAAM,IAAI,MAAM,0BAA0B;AAAA,MAC3C;AAEA,YAAM,QAAQ,KAAK,KAAK,OAAO,MAAM,WAAW,EAAE;AAElD,UAAI,MAAM,eAAe,QAAQ;AAChC,cAAM,IAAI,MAAM,2CAA2C;AAAA,MAC5D;AAEA,YAAMC,WAAU,eAAI,QAAQ,UAAM,sBAAQ,MAAM,KAAe,CAAC;AAEhE,YAAM,OAAO,IAAI,wBAAW;AAAA,QAC3B;AAAA,QACA,SAAAA;AAAA,QACA;AAAA,QACA,gBAAgB;AAAA,QAChB,GAAG;AAAA,MACJ,CAAC;AAED,YAAM,KAAK,WAAW;AAEtB,aAAO;AAAA,QACN;AAAA,QACA,SAAS,CAAC,CAAC,KAAK;AAAA,QAChB,QAAQ,KAAK;AAAA,QACb,QAAQ,KAAK;AAAA,QACb,WAAW,KAAK,SAAS;AAAA,MAC1B;AAAA,IACD,CAAC;AAAA,EACF,GACC,QAAQ;AAEV,SAAO;AAAA,IACN,QAAQ,kBAAkB,SAAS;AAAA,IACnC,aAAa,kBAAkB,SAAS;AAAA,IACxC,OAAO,MAAM,OAAO,CAAC,SAA2C,SAAS,IAAI;AAAA,EAC9E;AACD;",
  "names": ["fn", "address"]
}
